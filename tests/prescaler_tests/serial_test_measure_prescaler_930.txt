
E:\mash_tum_esp32>idf.py build
Executing action: all (aliases: build)
Running ninja in directory e:\mash_tum_esp32\build
Executing "ninja all"...
[1/8] Performing build step for 'bootloader'
ninja: no work to do.
[2/6] Building CXX object esp-idf/core/CMakeFiles/__idf_core.dir/Src/main.cpp.obj
In file included from ../core/Src/main.cpp:1:
../core/Inc/main.h:35:12: warning: 'cyclesCounter' defined but not used [-Wunused-variable]
 static int cyclesCounter = 0;
            ^~~~~~~~~~~~~
[6/6] Generating binary image from built executable
esptool.py v3.3.2-dev
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated E:/mash_tum_esp32/build/mash_tum_esp32.bin

Project build complete. To flash, run this command:
C:\Espressif\python_env\idf4.3_py3.8_env\Scripts\python.exe C:\Espressif\frameworks\esp-idf-v4.3.4\components\esptool_py\esptool\esptool.py -p (PORT) -b 460800 --before default_reset --after hard_reset --chip esp32  write_flash --flash_mode dio --flash_size detect --flash_freq 40m 0x1000 build\bootloader\bootloader.bin 0x8000 build\partition_table\partition-table.bin 0x10000 build\mash_tum_esp32.bin
or run 'idf.py -p (PORT) flash'

E:\mash_tum_esp32>idf.py -p COM5 flash monitor
Executing action: flash
Running ninja in directory e:\mash_tum_esp32\build
Executing "ninja flash"...
[1/4] Performing build step for 'bootloader'
ninja: no work to do.
[1/2] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v4...sp-idf-v4.3.4/components/esptool_py/run_serial_tool.cmake"
esptool.py esp32 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x8000 partition_table/partition-table.bin 0x1000 bootloader/bootloader.bin 0x10000 mash_tum_esp32.bin
esptool.py v3.3.2-dev
Serial port COM5
Connecting....
Chip is ESP32-D0WDQ6 (revision 1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 94:b5:55:26:ae:00
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003afff...
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 414.6 kbit/s)...
Hash of data verified.
Compressed 26112 bytes to 16050...
Writing at 0x00001000... (100 %)
Wrote 26112 bytes (16050 compressed) at 0x00001000 in 0.8 seconds (effective 257.3 kbit/s)...
Hash of data verified.
Compressed 174752 bytes to 91740...
Writing at 0x00010000... (16 %)
Writing at 0x0001b4ca... (33 %)
Writing at 0x00020c07... (50 %)
Writing at 0x00026681... (66 %)
Writing at 0x0002edf3... (83 %)
Writing at 0x00037039... (100 %)
Wrote 174752 bytes (91740 compressed) at 0x00010000 in 2.5 seconds (effective 553.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
Executing action: monitor
Running idf_monitor in directory e:\mash_tum_esp32
Executing "C:\Espressif\python_env\idf4.3_py3.8_env\Scripts\python.exe C:\Espressif\frameworks\esp-idf-v4.3.4\tools/idf_monitor.py -p COM5 -b 115200 --toolchain-prefix xtensa-esp32-elf- e:\mash_tum_esp32\build\mash_tum_esp32.elf -m 'C:\Espressif\python_env\idf4.3_py3.8_env\Scripts\python.exe' 'C:\Espressif\frameworks\esp-idf-v4.3.4\tools\idf.py' '-p' 'COM5'"...
--- WARNING: GDB cannot open serial ports accessed as COMx
--- Using \\.\COM5 instead...
C:\Espressif\frameworks\esp-idf-v4.3.4\tools/idf_monitor.py:518: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
  if StrictVersion(serial.VERSION) < StrictVersion('3.3.0'):
--- idf_monitor on \\.\COM5 115200 ---
--- Quit: Ctrl+] | Menu: Ctrl+T | Help: Ctrl+T followed by Ctrl+H ---
ets Jun  8 2016 00:22:57

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7392
load:0x40078000,len:14948
ho 0 tail 12 room 4
load:0x40080400,len:3688
0x40080400: _init at ??:?

entry 0x4008067c
I (29) boot: ESP-IDF v4.3.4 2nd stage bootloader
I (29) boot: compile time 18:00:28
I (29) boot: chip revision: 1
I (31) boot_comm: chip revision: 1, min. bootloader chip revision: 0
I (39) boot.esp32: SPI Speed      : 40MHz
I (43) boot.esp32: SPI Mode       : DIO
I (48) boot.esp32: SPI Flash Size : 2MB
I (52) boot: Enabling RNG early entropy source...
I (58) boot: Partition Table:
I (61) boot: ## Label            Usage          Type ST Offset   Length
I (69) boot:  0 nvs              WiFi data        01 02 00009000 00006000
I (76) boot:  1 phy_init         RF data          01 01 0000f000 00001000
I (83) boot:  2 factory          factory app      00 00 00010000 00100000
I (91) boot: End of partition table
I (95) boot_comm: chip revision: 1, min. application chip revision: 0
I (102) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=07860h ( 30816) map
I (122) esp_image: segment 1: paddr=00017888 vaddr=3ffb0000 size=02980h ( 10624) load
I (126) esp_image: segment 2: paddr=0001a210 vaddr=40080000 size=05e08h ( 24072) load
I (140) esp_image: segment 3: paddr=00020020 vaddr=400d0020 size=15484h ( 87172) map
I (172) esp_image: segment 4: paddr=000354ac vaddr=40085e08 size=055ach ( 21932) load
I (181) esp_image: segment 5: paddr=0003aa60 vaddr=50000000 size=00010h (    16) load
I (187) boot: Loaded app from partition at offset 0x10000
I (187) boot: Disabling RNG early entropy source...
I (202) cpu_start: Pro cpu up.
I (203) cpu_start: Starting app cpu, entry point is 0x4008104c
0x4008104c: call_start_cpu1 at C:/Espressif/frameworks/esp-idf-v4.3.4/components/esp_system/port/cpu_start.c:150

I (0) cpu_start: App cpu up.
I (217) cpu_start: Pro cpu start user code
I (217) cpu_start: cpu freq: 160000000
I (217) cpu_start: Application information:
I (221) cpu_start: Project name:     mash_tum_esp32
I (227) cpu_start: App version:      4c834ef-dirty
I (232) cpu_start: Compile time:     Nov  5 2022 00:36:35
I (239) cpu_start: ELF file SHA256:  36ffc35dfdf28912...
I (244) cpu_start: ESP-IDF:          v4.3.4
I (250) heap_init: Initializing. RAM available for dynamic allocation:
I (257) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM
I (263) heap_init: At 3FFB3300 len 0002CD00 (179 KiB): DRAM
I (269) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM
I (275) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM
I (282) heap_init: At 4008B3B4 len 00014C4C (83 KiB): IRAM
I (289) spi_flash: detected chip: generic
I (293) spi_flash: flash io: dio
W (297) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.
I (311) cpu_start: Starting scheduler on PRO CPU.
I (0) cpu_start: Starting scheduler on APP CPU.
I (321) SETUP: configuring general peryferials
0.000058 sec
0.999064 sec
1.999070 sec
2.999064 sec
3.999070 sec
4.999064 sec
5.999070 sec
6.999064 sec
7.999070 sec
8.999064 sec
9.999069 sec
10.999064 sec
11.999069 sec
12.999063 sec
13.999069 sec
14.999063 sec
15.999069 sec
16.999075 sec
17.999069 sec
18.999075 sec
19.999069 sec
20.999074 sec
21.999069 sec
22.999074 sec
23.999068 sec
24.999074 sec
25.999068 sec
26.999074 sec
27.999068 sec
28.999074 sec
29.999068 sec
30.999074 sec
31.999068 sec
32.999074 sec
33.999068 sec
34.999074 sec
35.999068 sec
36.999074 sec
37.999068 sec
38.999073 sec
39.999068 sec
40.999073 sec
41.999067 sec
42.999073 sec
43.999067 sec
44.999073 sec
45.999067 sec
46.999073 sec
47.999067 sec
48.999073 sec
49.999067 sec
50.999073 sec
51.999067 sec
52.999072 sec
53.999067 sec
54.999072 sec
55.999066 sec
56.999072 sec
57.999066 sec
0.874072 sec
voltage: 1696.000000 mV
 temperature: 42.424999
2.874072 sec
3.874066 sec
4.874072 sec
5.874066 sec
6.874072 sec
7.874066 sec
8.874072 sec
9.874066 sec
10.874071 sec
11.874066 sec
12.874071 sec
13.874066 sec
14.874071 sec
15.874065 sec
16.874071 sec
17.874065 sec
18.874071 sec
19.874065 sec
20.874071 sec
21.874065 sec
22.874071 sec
23.874065 sec
24.874071 sec
25.874065 sec
26.874070 sec
27.874065 sec
28.874070 sec
29.874064 sec
30.874070 sec
31.874064 sec
32.874070 sec
33.874064 sec
34.874070 sec
35.874064 sec
36.874070 sec
37.874064 sec
38.874070 sec
39.874064 sec
40.874070 sec
41.874064 sec
42.874069 sec
43.874064 sec
44.874069 sec
45.874063 sec
46.874069 sec
47.874063 sec
48.874069 sec
49.874063 sec
50.874069 sec
51.874075 sec
52.874069 sec
53.874075 sec
54.874069 sec
55.874074 sec
56.874069 sec
57.874074 sec
0.749069 sec
voltage: 1695.000000 mV
 temperature: 42.375000
2.749068 sec
3.749074 sec
4.749068 sec
5.749074 sec
6.749068 sec
7.749074 sec
8.749068 sec
9.749074 sec
10.749068 sec

Traceback (most recent call last):
  File "C:\Espressif\frameworks\esp-idf-v4.3.4\tools/idf_monitor.py", line 569, in main_loop
    item = self.cmd_queue.get_nowait()
  File "queue.py", line 198, in get_nowait
  File "queue.py", line 167, in get
_queue.Empty

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Espressif\frameworks\esp-idf-v4.3.4\tools/idf_monitor.py", line 1326, in <module>
    main()
  File "C:\Espressif\frameworks\esp-idf-v4.3.4\tools/idf_monitor.py", line 1139, in main
    monitor.main_loop()
  File "C:\Espressif\frameworks\esp-idf-v4.3.4\tools/idf_monitor.py", line 572, in main_loop
    item = self.event_queue.get(True, 0.03)
  File "queue.py", line 179, in get
  File "threading.py", line 306, in wait
KeyboardInterrupt

Aborted!

E:\mash_tum_esp32>